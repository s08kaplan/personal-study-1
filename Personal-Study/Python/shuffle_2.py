# -*- coding: utf-8 -*-
"""shuffle_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iCXoAGYFiOo7sfsy8FItMalfZw1vkk_p
"""

a = "Ben/im adÄ±m& Danny#"
a = a.replace("/","").replace("&","").strip("/&#")
print(a)

b= ("Clarusway")
c = "-".join(b)

print(type(b))
print(c)

b= "Y2Ma#te he&lps you@ to convert* and download You@tube videos to mp4 format for free in HD wit&hout any sig#nup."

b = b.replace("@","").replace("#","").replace("*","").replace("&","")
print(b)

#shortcut solution
import re
b= "Y2Ma#te he&lps you@ to convert* and download You@tube videos to mp4 format for free in HD wit&hout any sig#nup."
pattern = r'[@#&*]'
b = re.sub(pattern,'',b)
print(b)

#Write a Python program to calculate the sum of a list of numbers
my_list = [1,2,12,25,36]
def add_num(item):
    return sum(item)
add_num(my_list)

#Write a Python program to sum recursion lists.
a = [1, 2, [3,4], [5,6]]

def add_lst(lst):
    total = 0
    for item in lst:
        if isinstance(item, int):
            total += item
        elif isinstance(item, list):
            total += add_lst(item)  # Recursively sum the elements in the nested list
    return total

result = add_lst(a)
print(result)

#another solution
a = [1, 2, [3,4], [5,6]]
def recursive_list_sum(data_list):
	total = 0
	for element in data_list:
		if type(element) == type([]):
			total = total + recursive_list_sum(element)
		else:
			total = total + element

	return total
recursive_list_sum(a)

'''Write a Python program to calculate the harmonic sum of n-1.
Note: The harmonic sum is the sum of reciprocals of the positive integers.
Example :1 + 1/2 + 1/3 + 1/4 + 1/5 ...'''
def harmonic_sum(n):
  if n < 2:
    return 1
  else:
    return 1 / n + (harmonic_sum(n - 1))
harmonic_sum(5)

text = 'tyou can learn almost everything in pre-classz'
text = text.strip('zt').upper()
print(text)

text = 'In God wee Trust'
print(text.index('e'))
text = text[:9] + text[10:]
print(text)
# ------------
print(text.replace('ee','e'))

text = "ad: ali"
text2 = "soyad: veli"
text3 = "yas: 33"
print(f"{text}\n{text2}\n{text3}")

mix_list = ['d', 1, 'a', 7]
result = []
for i in mix_list:
  if type(i) == int:
    i = str(i)
  result.append(i)
result.sort()
print(result)

list_1 = ['one', 'four', 'nine']
list_2 = ['*-', '@', 'False']
list_3 = [True, False]
list_4 = [[3], [44], [-12]]
list_5 = [[1, 3], [44, 0], [-12, 1]]
list_1.sort()
list_2.sort()
list_3.sort()
list_4.sort()
list_5.sort()
print(list_1)
print(list_2)
print(list_3)
print(list_4)
print(list_5)

from datetime import datetime
from datetime import date
bugun = date.today()
suan = datetime.now()
print(bugun)
print(suan)
print(suan.strftime("%d/%m/%Y"))
print(bugun.strftime("%d/%m/%Y"))

cuma_sayisi = 0
for yil in range(1985,2023):
  for ay in range(1,13):
    if datetime(yil,ay,13).weekday() == 4:
      cuma_sayisi += 1

print(cuma_sayisi)

start_time = datetime.now()
print(start_time)
end_time = start_time + timedelta(seconds=duration)
print(end_time)
current_time = datetime.now()
remaining_time = end_time - current_time
print(remaining_time)

from datetime import datetime,timedelta
wanted_date = datetime(1980,2,2)

print(wanted_date)
t= datetime.now()
print(t)

suan= datetime.now()

istenen= timedelta(days =100)
sonuc= suan + istenen
print(sonuc)

suan = datetime.now()
gecmis= timedelta(days=1345)
sonuc = suan - gecmis
print(sonuc)