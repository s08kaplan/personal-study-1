# -*- coding: utf-8 -*-
"""w3resource_python_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uVDcHnlqPaiC3YUnHGrby-uW59YFcDfE
"""

# Write a Python program that calculates the area of a circle based on the radius entered by the user.
pi = 3.14
def area_circle(number):
  area = (number**2)*pi
  return area
user_value = int(input("Please enter a number : "))
print(area_circle(user_value))

#Write a Python program that accepts the user's first and last name and prints them in reverse order with a space between them.
def greeting_reverse(name,lname):
  print(f"Hi dear {lname}  {name}")
name = input("Please enter your name : ")
lname = input("Please enter your last name : ")
print(greeting_reverse(name,lname))

#Write a Python program that accepts a sequence of comma-separated numbers from the user and generates a list and a tuple of those numbers
def diff_type(number):
  numbers_list = number.split(",")
  l_number = [int(i) for i in numbers_list]
  t_number = tuple(l_number)
  return f"your number sequence list is : {l_number} and your tuple is : {t_number} "

user_input = input("Please enter some numbers with comma between them :  ")
print(diff_type(user_input))

'''Write a Python program that accepts a filename from the user and prints the extension of the file.
Sample file name : abc.java
Output : java'''
def file_extension(value):
   step_1 = value.rfind(".")
   step_2 = value[step_1+1:]
   return step_2
user_input = input("Please enter your filename : ")
print(file_extension(user_input))

# Write a Python program to display the first and last colors from the following list.
color_list = ["Red","Green","White" ,"Black"]
print(f"The first color in your list is : {color_list[0]} and the last color is : {color_list[-1]}")

# Write a Python program that accepts an integer (n) and computes the value of n+nn+nnn
def fun_adding(number):
  second = number + number
  third = number + number + number
  res = map(int,(number,second,third))
  result = sum(res)
  return result
user_number = input("Please enter a number : ")
print(fun_adding(user_number))
#next time try to write a function that the "n" values must be the user' input for example if input : 5 find the sum of n + nn + nnn + nnnn+ nnnnn

def wanted_number_add(num):
  a = []
  for i in range(1,num+1):
    product_str = i*str(num)
    a.append(product_str)

  res = map(int,a)
  result = sum(res)
  return result
user_number = int(input("Please enter a number : "))
print(wanted_number_add(user_number))

# Write a Python program that prints the calendar for a given month and year.
import calendar
y = int(input("Input the year : "))
m = int(input("Input the month : "))
print(calendar.month(y, m))

# Write a Python program to calculate the number of days between two dates.
from datetime import date
first_date = date(2023,8,22)
last_date = date(2023,8,30)
result = last_date - first_date
print(result.days)

from datetime import date
first_date = date(2023,8,22)
last_date = date(2023,9,30)
result = last_date - first_date
print(result.days)

from datetime import date
first_date = date(2023,8,22)
last_date = date(2024,8,30)
result = last_date - first_date
print(result.days)

#Write a Python program to get the volume of a sphere with radius six.
pi =3.14
def volume_sphere(number):
  volume = (4/3)*(number**3)*pi
  return volume
user_num =int(input("Please enter a number : "))
print(volume_sphere(user_num))

# Write a Python program to calculate the difference between a given number and 17. If the number is greater than 17, return twice the absolute difference.
def requiered_operation(number):
  if number > 17 :
    result = (number - 17)*2
    return result
  else :
    result = number - 17
    return result
user_num = int(input("Please enter a number : "))
print(requiered_operation(user_num))

# Write a Python program that checks whether a specified value is contained within a group of values.
def is_group_member(group_data, n):
   for value in group_data:
       if n == value:
           return True
   return False                     # without using else directly used return !!!!!
print(is_group_member([1, 5, 8, 3], 3))
print(is_group_member([5, 8, 3], -1))

#  Write a Python program to create a histogram from a given list of integers. "@" symbol use please
def histogram( items ):
    for n in items:
        output = ''
        times = n
        while( times > 0 ):
          output += '@'
          times = times - 1
        print(output)

histogram([2, 3, 6, 5])

def histogram( items ):
    for n in items:
        output = ''
        times = n
        while( times > 0 ):
          output += '*'
          times = times - 1
        print(output)

histogram([2, 3, 6, 5])

#  Write a Python program to get n (non-negative integer) copies of the first 2 characters of a given string. Return n copies of the whole string if the length is less than 2.
def wanted_number_copy(word,number):
  if word != word.isalpha or number <= 0:
    print("Please enter a string only contains letters")
    user = input()
    print("Please enter a positive number : ")
    user = int(input())
    if user <= 0 :
       print("I said positive but you insist to enter a negative number why bro??")
  elif len(word) < 2 :
    print(number*word)
  else:
    print(number*word[:2])
user_num = int(input("Please enter a positive number : "))
user_word = input("Please enter a string : ")
print(wanted_number_copy(user_word,user_num))

# Write a Python function that takes a positive integer and returns the sum of the cube of all positive integers smaller than the specified number.
def requiered_op(number):
  if number <= 0:
    warn = int(input("Please enter a positive number : "))
  else:
    count = 0
    for i in range(number):
      count += (i**3)
  print(count)
user_num = int(input("Please enter a number : "))
print(requiered_op(user_num))

#Write a Python function to check whether a distinct pair of numbers whose product is odd is present in a sequence of integer values.
def odd_product(nums):
  for i in range(len(nums)):
    for j in range(len(nums)):
      if  i != j:
        product = nums[i] * nums[j]
        if product & 1:
          return True
  return False
dt1 = [2, 4, 6, 8]
dt2 = [1, 6, 4, 7, 8]
dt3 = [1, 3, 5, 7, 9]
print(dt1, odd_product(dt1));
print(dt2, odd_product(dt2));
print(dt3, odd_product(dt3));    #I have a long way to learn be patient study hard